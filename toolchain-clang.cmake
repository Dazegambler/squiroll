set(CMAKE_SYSTEM_NAME Windows)
set(CMAKE_SYSTEM_PROCESSOR i686)

set(XWIN_SPLAT_PREFIX $ENV{HOME}/.xwin-cache/splat CACHE PATH ".xwin-cache/splat generated by xwin")
set(CRT_PATH ${XWIN_SPLAT_PREFIX}/crt/ CACHE PATH
    "CRT path, like C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community\\VC\\Tools\\MSVC\\14.29.30133 on Windows,\
    where there are `lib/x86/msvcmrt.lib` and `include/string`")
set(SDK_INCLUDE_PATH ${XWIN_SPLAT_PREFIX}/sdk/include/ CACHE PATH "SDK headers path, like C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.20262.0\\ on Windows,\
    where there is `um/winsock2.h`")
set(SDK_LIB_PATH ${XWIN_SPLAT_PREFIX}/sdk/lib/ CACHE PATH "SDK libs path, like C:\\Program Files (x86)\\Windows Kits\\10\\Lib\\10.0.20262.0\\ on Windows,\
    where there is `um/x86/kernel32.lib`")

set(CLANG_SUFFIX "-18" CACHE STRING "")

# specify the cross compiler
set(CMAKE_C_COMPILER clang-cl${CLANG_SUFFIX} )
set(CMAKE_CXX_COMPILER clang-cl${CLANG_SUFFIX})
set(CMAKE_RC_COMPILER llvm-rc${CLANG_SUFFIX})
set(CMAKE_LINKER lld-link${CLANG_SUFFIX})
set(CMAKE_MT llvm-mt${CLANG_SUFFIX})

set(CMAKE_C_FLAGS "-fuse-ld=lld -m32")
set(CMAKE_CXX_FLAGS "-fuse-ld=lld -m32")

if (CMAKE_GENERATOR MATCHES "Visual Studio")
    set(CMAKE_GENERATOR_TOOLSET "ClangCL")
    set(CMAKE_GENERATOR_PLATFORM "Win32")
endif()

# # skip c/cxx compiler checks
# set(CMAKE_C_COMPILER_WORKS 1)
# set(CMAKE_CXX_COMPILER_WORKS 1)

include_directories(
    SYSTEM
    ${CRT_PATH}/include
    ${SDK_INCLUDE_PATH}/shared
    ${SDK_INCLUDE_PATH}/ucrt
    ${SDK_INCLUDE_PATH}/um
)

link_directories(
    ${CRT_PATH}/lib/x86
    ${SDK_LIB_PATH}/ucrt/x86
    ${SDK_LIB_PATH}/um/x86
)
